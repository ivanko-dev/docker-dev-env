version: "3.8"
services:
  php74:
    image: ivankodev/php:dev74
    # build: ./images/php/7.4
    volumes:
      - ./www/:/var/www/
      - ./www/composer:/home/apache/.composer
      - ~/.ssh/:/home/apache/.ssh/
    hostname: php74.ivanko.dockerl
    container_name: php74
    extra_hosts:
      - host.docker.internal:host-gateway
    restart: unless-stopped
    environment:
      - XDEBUG=on
      - PHP_IDE_CONFIG=serverName=Docker
      - COMPOSER_VERSION=2    
    networks:
      - net

  php81:
    image: ivankodev/php:dev81
    # build: ./images/php/8.1
    volumes:
      - ./www/:/var/www/
      - ./www/composer:/home/apache/.composer
      - ~/.ssh/:/home/app/.ssh/
    hostname: php81.ivanko.docker
    container_name: php81
    extra_hosts:
      - host.docker.internal:host-gateway
    restart: unless-stopped
    environment:
      - XDEBUG=on
      - PHP_IDE_CONFIG=serverName=Docker
      - COMPOSER_VERSION=2
    networks:
      - net

  php82:
    image: ivankodev/php:dev82
    # build: ./images/php/8.2
    volumes:
      - ./www/:/var/www/
      - ./www/composer:/home/apache/.composer
      - ~/.ssh/:/home/app/.ssh/
    hostname: php82.ivanko.docker
    container_name: php82
    extra_hosts:
      - host.docker.internal:host-gateway
    restart: unless-stopped
    environment:
      - XDEBUG=on
      - PHP_IDE_CONFIG=serverName=Docker
      - COMPOSER_VERSION=2
    networks:
      - net

  nginx:
    image: ivankodev/nginx:1.22
    # build: ./images/nginx/1.22
    volumes:
      - ./www/:/var/www/
      - ./conf/nginx/:/etc/nginx/conf.d/
    container_name: nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    networks:
      - net

  redis:
    image: redis
    hostname: redis
    container_name: redis
    restart: unless-stopped
    networks:
      - net

  mysql:
    image: mariadb:10.6
    hostname: mysql
    container_name: mysql
    restart: unless-stopped
    command:
      --max_allowed_packet=64M
      --optimizer_use_condition_selectivity=1
      --optimizer_switch="rowid_filter=off"
    ports:
      - "3306:3306"
    networks:
      - net
    volumes:
      - ./www/mysql/:/var/lib/mysql/
    environment:
      - MARIADB_PASS=admin
      - MARIADB_USER=admin
      - MARIADB_ROOT_PASSWORD=admin

  phpmyadmin:
    image: phpmyadmin
    hostname: phpmyadmin
    container_name: phpmyadmin
    restart: unless-stopped
    ports:
      - "8080:80"
    networks:
      - net
    environment:
      - MYSQL_USER=admin
      - PMA_PASSWORD=admin
      - PMA_HOST=mysql

  # adminer:
  #   image: adminer
  #   hostname: adminer
  #   container_name: adminer
  #   restart: unless-stopped
  #   ports:
  #     - 8080:8080
  #   networks:
  #     - net
  #   environment:
  #     - ADMINER_DESIGN=dracula
  #     - ADMINER_DEFAULT_SERVER=mysql

  elasticsearch7:
    image: elasticsearch:7.17.10
    hostname: elasticsearch7
    container_name: elasticsearch7
    restart: unless-stopped
    ports:
      - "9201:9200"
    command: >
      /bin/sh -c "./bin/elasticsearch-plugin list | grep -q analysis-phonetic
      || ./bin/elasticsearch-plugin install analysis-phonetic analysis-icu;
      /usr/local/bin/docker-entrypoint.sh"
    networks:
      - net
    environment:
      - ES_JAVA_OPTS=-Xms2G -Xmx2G
      - discovery.type=single-node


  opensearch:
    image: opensearchproject/opensearch:2.5.0
    hostname: opensearch
    container_name: opensearch
    restart: unless-stopped
    ports:
      - "9200:9200"
      - "9300:9300"
    command: >
       /bin/sh -c "./bin/opensearch-plugin list list | grep -q analysis-phonetic
       || ./bin/opensearch-plugin install analysis-phonetic analysis-icu;
       /usr/share/opensearch/opensearch-docker-entrypoint.sh"
    networks:
       - net
    environment:
       - plugins.security.disabled=true
       - discovery.type=single-node

  rabbitmq:
    image: rabbitmq:3.11-management
    hostname: rabbitmq
    container_name: rabbitmq
    restart: unless-stopped
    ports:
      - "8082:15672"
    networks:
      - net

networks:
  net:
    name: net
    driver: bridge
    driver_opts:
        com.docker.network.enable_ipv6: "false"
    ipam:
        driver: default
        config:
            - subnet: 182.25.0.0/24
              gateway: 182.25.0.1
